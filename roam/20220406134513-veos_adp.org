:PROPERTIES:
:id:       59bd937c-b70b-4546-bb0b-98d2215737d8
:end:
#+title: veos-adp

[[id:b37a3d2a-9138-4625-89a5-457373c00324][veos-production-plan]]

* communication
** online (remote-can)
*** uploading
*** downloading
** offline (cloud offline data)?
*** database search interface (es)
**** only search and get record
** cloud deployment?
** data interface [[id:077609d9-c061-437a-948c-4c7ceeb10fc9][veos adp training data interface]]

* vehicles
** dev-vb
** 3 test-vb
* program management:

** who makes decision?
*** who has sense?
*** many decision made to stop the show, has impact on delaying the milestone.
*** technical decision: linux/windows, web requests not available on windows, why?
* remotecan client
** delivery insufficiency
*** poor documentation
**** class method not documented.
**** no why and how
**** diagram low quality
*** naming confusing
- "1s" vs "ls",
- "delay" as "dalay",
- "reson?",
- "pedal | brake?" --> "thrust | brake"
- meaningless value for gears 0,1,2,3; why not P R N D?
*** create a module, almost no test for delivery and expect client to test
**** almost no unit test
***** which test case? which unit tests?
****** test result ok with server not response!
****** test result ok with wrong json message!
****** transmission fail
****** data fail
******* json object need metadata to have its own custom class for serialization and deserialization
******* metadata: type
******* required field
******* optional field
******* length
****** upload fail
****** download fail
******* no confirmation of whether vehicle side received the same data. no check. ust send sucess!!!
****** server pending
***** not working under windows
***** test incomplete without server (windows problem)
***** test for only a method, not for class
**** test output not aligned
**** test_case names implies nothting
*** poor acceptance of requirements
**** documentation is the schema, need contract.
*** why sending unnecessary redundant data (consumption list)?
*** "dalay"? method? review?, who is using?
*** what is the meaning of "alignment（对齐）"
**** if not aligned, padding with null!
*** gears dimension? [2x2]?
*** timestamp definition, when(被收到的时间戳?)?
*** what does delay mean? estimation method?
*** granularity 1s? should be able to get smaller granularity!
*** what does "current_zoomed" mean? method? need raw data!
*** raw data : tuple with every timestamp, if not available use null!
*** api no return : black holes! (return status and the changes)
*** failed test result return OK/Done.
*** flashing dangerous parameter onto the vehicle without testing！
*** testing without knowing what is doing (which vehicle is flashing!)
*** chaotic imports no isort!
*** everytime huge chaotic code changes
*** chaotic documentation
*** cannot use directly
*** no confirm of changing!
*** No design, no architecture, no production level
**** code not maintainable
**** no exception handling
**** no timestamp hanlding
**** typos everywhere
**** not pytest ready
**** false claims
**** naming/API chaotic
**** terrible documentation/coding styles (no black, isort etc.)
**** not familiar with mongodb
*** API design: flashing return error code 3?!
*** API unstable: cannot flashing!
*** TODO debug 1000, 1002, empty code {} oss insufficiency
*** TODO get & send in duplex mode
*** poor response (own code response 2 days!)

** fixed url for server?
** need fake json data server like jsonplaceholder.typicode.com
** need timestamps
** streaming requests
** session for higher efficiency
** design goal --> understand deviation --> need verify --> performance checking
** TODO *issues* improvements:
*** need streaming interface
**** with mode switch to turn on and off
**** need full observation based on incessant frames of a full episode
*** need asynchronous download and upload
**** usual way of remote interaction to handle delay, interrupt, preemtpion
**** flexible, robust
*** upload need more status: start/stop/interrupt eos mode,
*** **Use RPC instead of REST api**
** product branch


[[id:dd9850e8-946d-46b7-b3e8-7331edf1be53][veos-adp-plan]]
* tbox
** Wiring
*** can_activate one light?
*** no calibration can?
** Can_driver_node rebuild? observation values ok?
** PM 21 rows --> 14 rows? row coordinates?
** Flashing
*** upload?
*** download?
*** diff on/off? meaning?
* Cloud
** Task
*** Pre-Requisite
**** cloud platform test (connection ssh login, python, linux usergroup, docker install, pyenv configuration, IDE )
**** Issue fixing
**** dockerfile
**** mypy
**** Kubernetes deployment test
**** fortinet install and ethernet test, functional test
*** veos deployment (pip pip+git install, mypy, poetry, )
*** veos functional test (remotecan, data pool)
** Cloud Problem
*** connection
**** Install, github, apt-source, pytorch, tensorflow, nvidia overall
**** internal repo? gitlab.newrizon.work?
**** Install package by copy not working
*** docker?
**** dockerfile in the project, install?
**** Dockerfile, （Kubernetes interface）， install source/pip
*** baiduyun account, profile setting
**** ssh
**** options: pip
**** dns, vpn /ssh reverse tunnel?
**** pyenv?
*** pip
**** git+https://${}:${}gitlab@newrizon.work/ai/drl-carla-manual.git@{realese2}
**** priviate pip repo
*** Not doing own duties
**** own container build issue
**** very old git (even in docker reinstalled)
**** not following instructions, deliberately asking irrelevant questions
**** NO TESTING, all integration test by Apps!
***** all issues found by apps, not integration test, no module test
***** issues found, no progress
**** deliberately change interfaces while adding features
***** rocketmq
****** why would app contain cluster stuff?
***** reomotecan parallel processing
**** No design review
***** poor design: single machine/clusters. why?
***** frequent changes of interfaces
**** way of development
***** exchange of code not functionality
*** VBU software not confirmed
*** instruction? handbook? (baidubce?, github? pytorch!)
*** Least surprise? (Low Efficiency, poor maturity)
**** user account management, strange account blocking
**** unstable access to outside network (pip, )
**** poor connection (github intermittent, 50k top)
**** inexplicable restore
**** partition? 20G
**** does copy (not install) really work?
** database
*** [[id:18d7b376-c12a-41a5-977a-966a078925f4][data warehouse]]
*** time series support for databse (timestamp, efficient indexing)
**** timestamp
***** indexing (searching)
***** random sample method
**** metadata:
***** VIN
***** unit time length
***** sample frequency
***** location
*** *automatic choose collection based on meta data*
*** serialization support for pandas dataframe and numpy array, python objects, compression
*** data versioning, snapshots, chunking, TTL
*** update records with new features (MongoDB 6.0, for MongoDB<6.0 only appending)
*** tracking changes over time
*** user, user library account management
*** Version-, Tick-, Chunkstore, BSONStore
*** working with large data, lazy loading
*** Prevent unindexed/unsharded collections
*** Thread safety?
*** Exception handling (collection)
*** Apache Arrow for in memory analytics (PyMongoArrow)
*** Multiple database with different unit lengths.
*** No configures in the database document/ in application configuration
*** maintaining, porting, searching, indexing, compatibility?
*** variant metadata
*** TODO data warelake design
** dvc [[id:07dbf914-8386-4e94-8528-1ced3983d1ad][ml-version-control]]
** truss server for prediction
** basic function
** saftety function
** algorithms verficatioin
* Safety
** communication (cybersecurity, data safety)
** actor
** observation (data safety)
* Test Issue
** design sucks, cannot meet requirements
** quality sucks, OSS not sufficient --> Intest interference? why?
** database drops, ridiculous
** deadend everywhere
** not telling truth
** no test before application, alarming!
*** all problems on the final applications
*** persistency, availability
*** not knowning service is available! everyday checking!!!
*** cannot continue test
** firmware version, no one cares, which one should be used?!
*** alarmed but no response
