:PROPERTIES:
:ID:       bc045c18-8fec-408c-82bc-b5ec5c8c6283
:END:
#+title: EFort
* 其他Openmind OS
- openmind.org
  - openmind_agi
  - VLA, LLM
  - robotics, ai, blockchain
  - OM1：智能体机器人操作系统 VLA
    - 多平台机器智能
  - 另一家美国小创业企业
- open-mind.ai： 新闻写作的AI平台
- OpenMind AI: 教育系统ai平台
- openMind华为基于昇腾的深度学习计算平台
- 启智机器人模型
  - [[http://www.6-robot.com/6robot/bk_24243796.html][北京六部工坊科技有限公司]]
  - [[https://github.com/6-robot/wpb_home][启智ROS机器人开放源码]]
- [[https://www.openi.org.cn/][OpenI启智社区]](鹏城实验室，百度，高校)
* 启智(芜湖)智能机器人有限公司
  - Openmind Smart Robotics Technology Co., Ltd. Open AI + (Deepmind)
** 产品及项目
- 4s产品定位
  - Smart智能化，全线支持通用技术底座，可以帮助客户快速部署、二次开发；
  - Safety安全，支持PROFlsafe安全通信，具备异常掉电检测和高级安全功能；
  - Stable稳定，对标国际主流标准，平均无故障工作时间大于40小时；
  - Strength鲁棒（强壮），具备更强的防护等级、抗干扰能力和更高的散热性。
- 合作：
  - 埃夫特与乐聚机器人、讯飞集团、绿的谐波、穹彻智能等九家公司达成机器人及核心技术模块合作，
  - 还将与奇瑞汽车、赛力斯、富士康、中鼎股份等企业合作，共同推动行业及应用解决方案落地
- 本体：
  - 人形机器人：yobot W1(轮式+双臂，32个自由度) R1(足式+双臂，未展示), 基于Openmind OS,全国产芯片与硬件EBox：
  - SCARA机器人：中负载机器人，大负载机器人ER300,五大系列25个人型号
  - 埃夫特桌面机器人、小负载机器人、中负载机器人、大负载机器人以及防爆喷涂机器人均在研发进程中，自主研发的400kg、500kg、700kg负载机器人拟于今年三、四季度推出
- 商业模式：Raas, robot as a service,租赁与出售
* 智能机器人通用技术底座：通用开发部署平台-> 降低机器人技能app开发门槛，开发成本，提高开发效率
** 通用操作系统 Openmind OS
- 愿景
  - 类似iOS、安卓和鸿蒙的技术底座(根技术)
  - 传统机器人开发长期受制于软硬件耦合度高、算法适配难、数据闭环效率低等瓶颈，导致智能化升级成本居高不下
  - 可让机器人真正具备环境理解与自主决策能力
- 客制化的嵌入式操作系统+中间件
  - 内核：
    - BSP与驱动
    - 客制化实时操作系统RTOS（RT-Linux/ROS/VxWorks/GH)
  - 中间件(网络化分布式处理框架）
    - 数据通信:实时数据分发
    - 计算任务并行化
  - 运行时环境(runtime)
    - 运行时服务
    - 机器人应用库(模块化机器人功能组件)：动态规划，导航定位，模型，图形界面，运动控制，动力学补偿，机器视觉，环境建模
    - 应用开发:感知设备自识别与动态配置，基于外部感知信息的优化控制，监控与诊断，预测性维护，工艺定制二次开发，工艺优化
    - 数据串行化与解析，末端感知设备即插即用，云端网络协同扩展服务，通用接口，机器人应用框架
- 结论
  "埃夫特智能机器人通用技术底座"是一种专为工业应用设计的综合技术平台,集成了硬件和软件,强调效率和可靠性。尽管具体细节有限,研究表明其在工业制造中具有潜力,但其专有性质可能限制灵活性和全球适用性。与 ROS、VxWorks 和 RT-Linux 相比，其更适合 EFORT 的特定硬件，但开源性和扩展性可能不如 ROS。
  以下表格详细比较“埃夫特智能机器人通用技术底座”与 ROS、VxWorks 和 RT-Linux：

 | 特征/方面   | 埃夫特系统                                 | ROS                                | VxWorks                              | RT-Linux                            |
 |-------------+--------------------------------------------+------------------------------------+--------------------------------------+-------------------------------------|
 | 设计理念    | 稳定性和性能，专为工业应用设计             | 灵活性与模块化，适合研究和原型开发 | 可靠性与实时性能，适用于安全关键系统 | 提供硬实时能力，基于 Linux 生态系统 |
 | 架构        | 定制架构，可能基于 RTOS，硬件深度集成      | 分布式图结构，节点通过主题通信     | 基于微内核，实时调度和多任务处理     | 预空多任务，Linux 内核的实时扩展    |
 | 关键组件    | 定制控制软件，用户界面，监控接口           | roscore、节点、消息传递系统        | 内核、设备驱动、POSIX 兼容 API       | 实时内核补丁、调度类                |
 | 特点        | 视觉系统、离线编程、模拟技术，工业应用支持 | 包管理、可视化工具、模拟工具       | 实时性能、容错、网络透明             | 硬实时能力、POSIX 兼容、Linux 兼容  |
 | 特性        | 专为 EFORT 机器人设计，工业制造优化        | 开源、大社区、跨平台               | 商业化，用于安全关键系统             | 开源，基于 Linux，社区驱动          |
 | 优势        | 硬件集成，行业定制化，专业支持             | 灵活性、扩展性、大生态系统         | 可靠性、性能，支持实时应用           | 硬实时能力、Linux 兼容              |
 | 缺点/局限性 | 专有性，兼容性有限，依赖公司支持           | 非实时系统，时间关键任务性能不足   | 成本高、专有、学习曲线陡             | 设置和维护复杂，使用范围较窄        |
** 墨斗IDE（Modou）
- 基于VSCode开发客制化集成开发环境(RoboDK)
- 提供了一整套完整的开发工具链，可有效缓解中小制造企业机器人应用开发“门槛高、成本高、效率低”等现实困境
- 功能
  - 代码编辑
    - 离线编程 RPL语言
    - 代码工程配置
  - 配置：产品,设备,控制器,总线,
  - 3D图形仿真
    - 3D模型编辑
    - 非动力学仿真(只有几何与图形参数,无惯性参数)
- 适配平台:
  - 接口：CAN, EtherCAT接口, Modbus
  - 控制器
  - 设备
** 大衍数据平台（云端）
- 海量场景数据的喂养
- 智能机器人通用技术底座的核心环节，
- 大衍数据平台集机器人应用数据的采、洗、存、标、训一体，
- 通过标准化数据流水线，破解机器人领域长期存在的“数据孤岛”难题，
- 使算法开发从Notebook原型到生产部署的周期大幅缩短
* 下一代机器人操作系统项目
- 总体设计理念和目标
  - 开发这个ROS替代方案的核心驱动力在于：
    - 战略独立性： 主要目的是减少国内参与者对海外机器人操作系统的依赖，并建立国内机器人软件生态系统。
    - 行业需求： 该ROS旨在满足中国机器人制造商和用户的特定需求，解决他们独特的工业需求和运营环境。
    - 先进能力： 旨在提供增强的功能和能力，超越现有的机器人操作系统。
    - 易用性： 该ROS旨在提高效率，降低成本，并使更广泛的用户更容易采用。
- 架构概述
  - 以下是系统拟议架构的分解：
    - 模块化设计： 强调模块化，允许创建可重用和可定制的组件。
    - 开放式架构： 目标是通过提供开放式架构来促进可扩展性。
    - 混合云集成： 一个重要的元素是与混合云平台的集成。
    - 基于VxWorks的内核层： 看起来ROS是在VxWorks之上构建环境。
- 主要组件和功能
  - 机器人操作系统总体设计与运行环境
    - 旨在建立一个开放、免费的机器人操作系统平台，支持复杂的智能机器人功能。
    - 它将包括一个稳定、高效、易用的机器人智能机器人开发环境，以促进国内机器人技术的发展。
    - 整合国内基础软件体系，建立机器人上下游软件生态，以承担国家重大战略需求。
    - 机器人操作系统主要被VxWorks、RT-Linux占据。
    - 操作系统设计将涉及传感设备的自动识别和动态配置。
    - 该架构涉及使用网络集成，使用网络框架进行数据分析，并使用数据分发框架来分发处理节点。
    - 支持开放式应用程序架构，其中涉及用于实时系统的系统级内核，该内核支持具有时间序列数据分发和交互的机器人执行环境。
    - 在机器人安全性方面，该系统使用标准协议，例如IEC61499框架，并以VxWorks作为核心引擎。
    - 高级驱动程序基于EtherCAT、CAN构建。
  - 机器人功能组件与可视化环境
    - 该系统侧重于解决标准化、开放、可重构、基于组件的平台系统中的问题。
    - 功能构建的主要目的之一是提供工业应用组件。
    - 支持文本和图形化类型的应用程序开发模式，可以与提供开放式API端口和图形拖动模块一起使用。
    - 支持IEC61131-3/61499 5种开发语言，涉及包含可视模块密封、代码编译和调整的整体总线配置。
    - 还可以使用自我运行的IDE开发环境，并且Matlab软件可用于动态应用程序和管理。
    - 机器人使用仿真技术进行测试，并采用模块化开发流程，包括快速软件原型设计。
  - 云平台
    - 云系统构建于公共和私有资源之上，并以混合模式运行，以改进云部署系统和流程。
    - 在行业中提供灵活的机器人控制平台。
    - 它的工作原理是将机器人连接到云系统以处理数据。
    - 整体结构构建于边缘计算基础设施之上，这将允许它从边缘的机器人连接到云，使云端处理数据。
- 主要特点
  - 实时能力： 鉴于对VxWorks的依赖，对要求苛刻的机器人应用程序的实时性能可能是核心重点。
  - 工业重点： 该ROS旨在通过提供下一代机器人大型操作系统生态系统来改善当前的中国商业环境。
  - 模块化和可扩展性： 该架构强调模块化，这有助于创建可自定义的组件。
  - 连接性和集成： 它的设计侧重于与不同的组件、设备和云平台无缝连接。
  - 智能功能： 该架构包括智能功能，以便更好地与软件交互。
- 潜在优势
  - 满足特定需求： 该ROS旨在解决对独立于其他机器人操作系统的需求。
  - 针对中国行业量身定制： 专为中国制造业环境设计的系统可以解决实际问题并加速采用。
  - 控制和定制： 拥有国内替代方案可以更好地控制技术，并可以进行更深入的定制以满足特殊需求。
  - 潜在的成本优势： 根据开发模式和许可，与现有商业解决方案相比，它可以为中国公司节省成本。
  - 增强的安全性： 国内ROS将为整个生态系统提供增强的安全性。
- 潜在缺点和局限性
  - 生态系统开发： 构建繁荣的生态系统需要大量的努力、社区建设，并吸引开发人员、硬件供应商和集成商。
  - 技术成熟度： 创建在功能、稳定性和性能方面可以与现有解决方案竞争的机器人操作系统是一项艰巨的任务。
  - 市场采用： 即使拥有技术上健全的系统，广泛采用也需要克服惰性、建立信任，并证明比现有选项具有明显的优势。
  - 集成挑战： ROS支持开放API，这使得与其他技术集成变得困难。
- 与其它机器人操作系统比较
  - ROS (机器人操作系统):
    - 优点： ROS是占主导地位的开源机器人操作系统。它拥有庞大的社区、广泛的库、广泛的受支持硬件以及用于仿真、可视化和开发的丰富工具生态系统。
    - 缺点： ROS 1缺乏真正的实时功能，使其不适合某些要求极高的机器人应用程序。ROS 2解决了这个问题，但过渡仍在进行中。ROS对于新手来说学习曲线可能很陡峭。
    - 此ROS的比较： 为了与ROS竞争，新系统需要证明其具有令人信服的优势，例如更好的实时性能、更友好的用户界面或针对中国行业量身定制的特殊功能。强烈关注安全性和国内支持也可能是差异化因素。
  - VxWorks:
    - 优点： VxWorks是一种商业实时操作系统 (RTOS)，以其可靠性、确定性性能和安全认证而闻名。它通常用于不能发生故障的关键应用程序中。
    - 缺点： VxWorks是专有的，并且与开源选项相比具有更高的成本。它的生态系统小于ROS。
    - 此ROS的比较： 如果此替代方案使用VxWorks作为基础，它可以继承VxWorks的实时优势。它需要添加更高级的机器人功能和更易于使用的开发环境，以吸引更广泛的机器人受众。该文档似乎表明这就是计划。
  - RT-Linux:
    - 优点： RT-Linux是Linux内核的实时扩展。它提供实时功能，同时仍然利用Linux的庞大生态系统。它是开源且可以免费使用。
    - 缺点： 与专用RTOS（如VxWorks）相比，配置和维护RT-Linux可能更复杂。
    - 此ROS的比较： 如果新系统选择RT-Linux作为基础，它将可以访问Linux生态系统，但可能在实现与VxWorks相同级别的确定性方面面临挑战。
- 关键成功因素, 为了使这种中国ROS替代方案取得成功，它需要关注：
  - 社区建设： 培养充满活力的开发人员、研究人员和用户社区。
  - 生态系统开发： 吸引硬件供应商、软件提供商和系统集成商。
  - 用户友好型工具： 创建一个既能被经验丰富的机器人专家又能被新手访问的开发环境。
  - 强大支持： 提供出色的文档、教程和技术支持。
  - 可证明的价值： 与现有解决方案相比，在性能、成本、安全性或易用性方面显示出明显的优势。
- 总结
  - 在中国开发国内ROS替代方案的驱动力来自战略考虑以及满足中国机器人行业特定需求的愿望。虽然挑战很大，但关注实时性能、易用性和生态系统开发可以提高成功的可能性。
